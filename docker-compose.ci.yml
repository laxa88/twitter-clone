# This starts up DB, and API server, then calls Dockerfile.ci to
# build and run e2e tests in the frontend.
# Use only for CI workflow.

# To run this specifically:
# docker-compose -f docker-compose.ci.yml up --abort-on-container-exit --exit-code-from fe-ci
# docker-compose -f docker-compose.ci.yml down

version: '3.7'
services:
  rust-db:
    hostname: my-rust-db
    image: postgres:11-alpine
    environment:
      - POSTGRES_DB=myrustdb
      - POSTGRES_USER=myrustuser
      - POSTGRES_PASSWORD=myrustpassword
    ports:
      - "15433:5432"
    volumes:
      - ./docker/db/rust-init:/docker-entrypoint-initdb.d

  rust-server:
    build:
      context: ./rust
      dockerfile: Dockerfile.ci
    ports:
      - "8002:8002"
    depends_on:
      - rust-db

  fe-ci:
    build:
      context: ./fe
      dockerfile: Dockerfile.ci
    ports:
      - "1234:1234"
    environment:
      # Injected from Github workflow's secret
      # For confirmation, these values should be "rust-server" and "8002"
      - SECURE_API_HOST=${SECURE_API_HOST:-rust-server}
      - SECURE_API_PORT=${SECURE_API_PORT:-8002}
    depends_on:
      - rust-server

